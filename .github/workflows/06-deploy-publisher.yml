name: Deploy Publisher

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write  # Grant the GitHub Action permission to request OIDC tokens
  contents: read   # Standard permission for checking out code

env:
  REGISTRY_NAME: crtfpocljgqvdeveus.azurecr.io
  IMAGE_NAME: iotpublisher
  RESOURCE_GROUP: "rg-tfpoc-spoke-dev-eus"
  #TODO: Fix this name
  # CONTAINER_APP_NAME: "put-test"
  CONTAINER_APP_NAME: "ca-hello-world"
  AZURE_SUBSCRIPTION: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_USE_OIDC: true


jobs:
  build:
    runs-on: self-hosted
    environment: "erictest"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # - name: Login to Azure using OIDC
      #   uses: azure/login@v2
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # - name: Log in to Azure Container Registry
      #   run: |
      #     TOKEN=$(az acr login --name <acrName> --expose-token --output tsv --query accessToken)
      #     docker login 

      # - name: 'Docker Login'
      #   uses: azure/docker-login@v1
      #   with:
      #     login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
      #     username: ${{ secrets.ACR_USERNAME }}
      #     password: ${{ secrets.ACR_PASSWORD }}

      - name: Set Git Commit SHA
        run: |
          echo "GIT_COMMIT_SHA=${GITHUB_SHA}" >> $GITHUB_ENV

      # - name: Build and Push to ACR
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: applications/fake-publisher
      #     file: applications/fake-publisher/Dockerfile
      #     push: true
      #     tags: ${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ env.GIT_COMMIT_SHA }}

      - name: Build and Push Docker Image
        run: |
          docker login ${{ env.REGISTRY_NAME }} --username ${{ secrets.ACR_USERNAME }} --password-stdin <<< ${{ secrets.ACR_PASSWORD }} 
          IMAGE_TAG=${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ env.GIT_COMMIT_SHA }}
          cd applications/fake-publisher
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      # - name: Deploy to Azure Container Apps
      #   run: |
      #     az containerapp update \
      #       --name ${{ env.CONTAINER_APP_NAME }} \
      #       --resource-group ${{ env.RESOURCE_GROUP }} \
      #       --image ${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ env.GIT_COMMIT_SHA }} \
      #       --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            --id /subscriptions/${{ env.ARM_SUBSCRIPTION_ID }}/resourceGroups/${{ env.RESOURCE_GROUP}}/providers/Microsoft.App/containerapps/${{ env.CONTAINER_APP_NAME }} \
            --image ${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ env.GIT_COMMIT_SHA }} \

            /subscriptions/d5736eb1-f851-4ec3-a2c5-ac8d84d029e2/resourceGroups/rg-tfpoc-spoke-dev-eus/providers/Microsoft.App/containerapps/put-test
